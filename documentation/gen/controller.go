package main

import (
	"fmt"
	"log"
	"strings"

	"github.com/google/renameio"
)

var headerController = `
# ![HAProxy](../assets/images/haproxy-weblogo-210x49.png "HAProxy")

## HAProxy kubernetes ingress controller

This is autogenerated from [doc.yaml](doc.yaml). Description can be found in [generator readme](gen/README.md)

Image can be run with arguments:

| Argument | Default |
| - |:-:|
`

func (c *Conf) generateReadmeController() {
	var buff strings.Builder
	buff.WriteString(headerController)

	for _, ann := range c.Arguments {
		if !ann.VersionMax.LowerOrEqual(c.ActiveVersion) {
			continue
		}
		dev := ""
		if !ann.VersionMin.LowerOrEqual(c.ActiveVersion) {
			dev = " :construction:(dev)"
		}
		link := ann.Argument
		/*
			if len(link) > 2 && link[0] == '-' && link[1] == '-' {
				link = link[1:]
			}*/
		link = strings.ReplaceAll(link, ".", "")
		annDefault := ann.Default
		if annDefault != "" {
			annDefault = fmt.Sprintf("`%s`", annDefault)
		}
		buff.WriteString(fmt.Sprintf("| [`%s`](#%s)%s | %s |\n", ann.Argument, link, dev, annDefault))
	}

	buff.WriteString("\n\n")

	for _, ann := range c.Arguments {
		if !ann.VersionMax.LowerOrEqual(c.ActiveVersion) {
			continue
		}
		buff.WriteString(fmt.Sprintf("### `%s`\n\n", ann.Argument))
		if !ann.VersionMin.LowerOrEqual(c.ActiveVersion) {
			buff.WriteString("\n  > :construction: this is only available from next version, currently available in dev build\n\n")
		}
		buff.WriteString(fmt.Sprintf("  %s\n", ann.Description))
		for _, tip := range ann.Tip {
			buff.WriteString(fmt.Sprintf("\n  :information_source: %s\n", tip))
		}
		if ann.External && ann.Argument != `--external` {
			buff.WriteString("\n:warning: this is only available in external mode\n\n")
		}

		buff.WriteString("\nPossible values:\n\n")
		for _, value := range ann.Values {
			buff.WriteString(fmt.Sprintf("- %s\n", writeValue(value, ann.Default)))
		}
		buff.WriteString("\n")
		buff.WriteString("Example:\n\n```yaml\n")
		buff.WriteString(ann.Example)
		buff.WriteString("\n```\n\n")
		buff.WriteString("<p align='right'><a href='#haproxy-kubernetes-ingress-controller'>:arrow_up_small: back to top</a></p>\n\n***\n\n")
	}

	err := renameio.WriteFile("../controller.md", []byte(buff.String()), 0o644)
	if err != nil {
		log.Println(err)
	}
}
